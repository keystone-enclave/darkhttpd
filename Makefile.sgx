SGX_SIGNER_KEY ?= ../gramine/Pal/src/host/Linux-SGX/signer/enclave-key.pem

ARCH_LIBDIR ?= /lib/$(shell $(CC) -dumpmachine)

ifeq ($(DEBUG),1)
GRAMINE_LOG_LEVEL = debug
else
GRAMINE_LOG_LEVEL = error
endif

.PHONY: all
all: darkhttpd-static.manifest
ifeq ($(SGX),1)
all: darkhttpd-static.manifest.sgx darkhttpd-static.sig darkhttpd-static.token
endif

darkhttpd-static.manifest: manifest.template
	gramine-manifest \
		-Dlog_level=error \
		-Dexecdir=. \
		-Darch_libdir=$(ARCH_LIBDIR) \
		$< >$@

darkhttpd-static.manifest.sgx: darkhttpd-static.manifest
	@test -s $(SGX_SIGNER_KEY) || \
	    { echo "SGX signer private key was not found, please specify SGX_SIGNER_KEY!"; exit 1; }
	gramine-sgx-sign \
		--key $(SGX_SIGNER_KEY) \
		--manifest darkhttpd-static.manifest \
		--output $@

darkhttpd-static.sig: darkhttpd-static.manifest.sgx

darkhttpd-static.token: darkhttpd-static.sig
	gramine-sgx-get-token --output darkhttpd-static.token --sig darkhttpd-static.sig

ifeq ($(SGX),)
GRAMINE = gramine-direct
else
GRAMINE = gramine-sgx
endif

run:
	gramine-sgx darkhttpd-static
	sleep 10
	for i in {1..10}; do time wget localhost:8080/index.html -O /dev/null; done

.PHONY: clean
clean:
	$(RM) *.manifest *.manifest.sgx *.token *.sig OUTPUT scripts/testdir/*

.PHONY: distclean
distclean: clean
